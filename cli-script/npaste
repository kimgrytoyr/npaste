#!/bin/sh

usage() {
    echo "Quick CLI for sending data to npaste"
    echo ""
    echo "Requires: curl"
    echo ""
    echo "npaste [OPTIONS] file"
    printf "\t-h --help\n"
    printf "\t-p --plaintext No syntax highlighting.\n"
    printf "\t--age When to delete this item. Syntax: n[m|h|d|y], where n is an integer. minutes, hours, days, years. Example: 1h. Default: 0, ie. never deleted.\n"
    printf "\t--no-auto-pipe Don't use auto pipe command as defined in config file\n"
    printf "\t--config Default: $HOME/.config/npaste/cli.conf\n"
    echo ""
    echo "The supplied file may be a file with or without suffix or simply '-' for STDIN. Default if omitted is STDIN."
}

ntharg() {
    # clever hack from: https://stackoverflow.com/a/14649955
    shift $1
    printf '%s\n' "$1"
}
LAST_ARG=$(ntharg $# "$@")

api_request() {
    # parameters to this function
    local NPASTE_username=$1
    local NPASTE_apikey=$2
    local NPASTE_url=$3
    # $n... parameters directly to curl

    # get curl opts
    local NPASTE_opts=""
    while [ "$4" != "" ]; do
        NPASTE_opts="$NPASTE_opts $4"
        shift
    done

    curl --basic --user "$NPASTE_username:$NPASTE_apikey" --silent $NPASTE_opts "$NPASTE_url"
    return $?
}

# defaults
NPASTE_IS_PLAINTEXT=0
NPASTE_AGE=0
NPASTE_CONFIG="$HOME/.config/npaste/cli.conf"
NPASTE_FILE="-" # default stdin
NPASTE_USE_AUTO_PIPE_COMMAND=1

# override from config if no age has been set
NPASTE_AGE_HAS_BEEN_SET=0

# get parameters
while [ "$1" != "" ]; do
    PARAM=$(echo $1 | awk -F= '{print $1}')
    VALUE=$(echo $1 | awk -F= '{print $2}')
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        -p | --plaintext)
            NPASTE_IS_PLAINTEXT=1
            ;;
        --age)
            NPASTE_AGE=$VALUE
            NPASTE_AGE_HAS_BEEN_SET=1
            ;;
        --config)
            NPASTE_CONFIG=$VALUE
            ;;
        --no-auto-pipe)
            NPASTE_USE_AUTO_PIPE_COMMAND=0
            ;;
        *)
            if [ "$1" = "$LAST_ARG" ]; then
                NPASTE_FILE="$1"
            else
                echo "ERROR: unknown parameter \"$PARAM\""
                usage
                exit 1
            fi
            ;;
    esac
    shift
done

NPASTE_USERNAME=""
NPASTE_APIKEY=""
NPASTE_URL=""
NPASTE_AUTO_PIPE_COMMAND=""
# read config file for secrets
while read -r line || [[ -n $line ]]; do
    PARAM=$(echo $line | awk -F= '{print $1}')
    VALUE=$(echo $line | awk -F= '{print $2}')
    case $PARAM in
        username)
            NPASTE_USERNAME=$VALUE
            ;;
        apikey)
            NPASTE_APIKEY=$VALUE
            ;;
        url)
            NPASTE_URL=$VALUE
            ;;
        default_age)
            if [ $NPASTE_AGE_HAS_BEEN_SET -eq 0 ]; then
                # override age, as no age has been provided at runtime
                NPASTE_AGE=$VALUE
            fi
            ;;
        auto_pipe_command)
            if [ $NPASTE_USE_AUTO_PIPE_COMMAND -eq 1 ]; then
                NPASTE_AUTO_PIPE_COMMAND=$VALUE
            fi
    esac
done < "$NPASTE_CONFIG"

# check if we have info for auth
if [ -z "$NPASTE_USERNAME" ] || [ -z "$NPASTE_APIKEY" ] || [ -z "$NPASTE_URL" ]; then
    echo "Invalid config."
    echo ""
    echo "Example:"
    printf "\tusername=johndoe\n"
    printf "\tapikey=abcd\n"
    printf "\turl=https://paste.example.com/\n"
    printf "\tdefault_age=8h\n"
    printf "\tauto_pipe_command=xsel -i -b\n"
    echo ""
    echo "All options are required, except default_age and auto_pipe_command, which are optional."

    exit 2
fi

# upload file to npaste
NPASTE_PASTE_URL=$(cat $NPASTE_FILE | api_request $NPASTE_USERNAME $NPASTE_APIKEY $NPASTE_URL "-F paste=@-" "-F plain=$NPASTE_IS_PLAINTEXT" "-F age=$NPASTE_AGE")

case "$NPASTE_PASTE_URL" in
    http*)
        if [ -t 1 ] && [ -z "$NPASTE_AUTO_PIPE_COMMAND" ]; then
            # this is in a terminal, and we'd prefer a newline at the end,
            # and we're not intending to pipe it ourself with an auto pipe command
            NPASTE_TERMINAL_NEWLINE="\n"
        else
            # this is in a pipe, and we'd just like the raw url
            NPASTE_TERMINAL_NEWLINE=""
        fi

        if [ -z "$NPASTE_AUTO_PIPE_COMMAND" ]; then
            # no auto pipe command. print to stdout
            printf "$NPASTE_PASTE_URL$NPASTE_TERMINAL_NEWLINE"
            exit 0
        else
            # auto pipe the data to the selected command. exit with the auto pipe's exit code
            printf "$NPASTE_PASTE_URL" | $NPASTE_AUTO_PIPE_COMMAND
            exit $?
        fi

        ;;
    *)
        echo "API error: $NPASTE_PASTE_URL"
        exit 3
        ;;
esac

